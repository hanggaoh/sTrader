services:
  db:
    image: timescale/timescaledb:latest-pg16
    container_name: timescaledb
    restart: always
    environment:
      POSTGRES_USER: strader_user
      POSTGRES_PASSWORD: my-secret-pw
      POSTGRES_DB: strader_db
    volumes:
      - timescaledb-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U strader_user -d strader_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./stock-data-backend
      target: final # Explicitly target the final stage for the production backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_HOST=db
      - DB_NAME=strader_db
      - DB_USER=strader_user
      - DB_PASSWORD=my-secret-pw
      - DB_PORT=5432
    ports:
      - "8000:8000"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  backend-test:
    build:
      context: ./stock-data-backend
      target: test # Target the test stage in the Dockerfile
    depends_on:
      db:
        condition: service_healthy
    # The DB connection details are still needed for the test to run.
    environment:
      - DB_HOST=db
      - DB_NAME=strader_db
      - DB_USER=strader_user
      - DB_PASSWORD=my-secret-pw
      - DB_PORT=5432
    # The command to run the test suite.
    command: ["python", "-m", "pytest"]

volumes:
  timescaledb-data:
